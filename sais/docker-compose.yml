version: "3.9"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-sais}
      POSTGRES_USER: ${POSTGRES_USER:-sais}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sais}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sais} -d ${POSTGRES_DB:-sais}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  api:
    image: sais-api:latest
    build:
      context: .
      dockerfile: ops/docker/api.Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg2://${POSTGRES_USER:-sais}:${POSTGRES_PASSWORD:-sais}@db:5432/${POSTGRES_DB:-sais}}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      TZ: ${TZ:-America/Fortaleza}
      CORS_ORIGINS: ${CORS_ORIGINS:-["http://localhost:3000"]}
      RATE_LIMIT_REQUESTS: ${RATE_LIMIT_REQUESTS:-120}
      RATE_LIMIT_WINDOW_SECONDS: ${RATE_LIMIT_WINDOW_SECONDS:-60}
      EVOLUTION_API_BASE_URL: ${EVOLUTION_API_BASE_URL:-http://evolution:8080}
      EVOLUTION_INSTANCE_NAME: ${EVOLUTION_INSTANCE_NAME:-}
      EVOLUTION_API_KEY: ${EVOLUTION_API_KEY:-}
      WEBHOOK_VERIFY_TOKEN: ${WEBHOOK_VERIFY_TOKEN:-}
      WHATSAPP_MOCK_MODE: ${WHATSAPP_MOCK_MODE:-true}
      WHATSAPP_DEFAULT_TENANT_ID: ${WHATSAPP_DEFAULT_TENANT_ID:-}
      WHATSAPP_DEFAULT_TENANT_NAME: ${WHATSAPP_DEFAULT_TENANT_NAME:-Default WhatsApp Tenant}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"

  migrate:
    image: sais-api:latest
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg2://${POSTGRES_USER:-sais}:${POSTGRES_PASSWORD:-sais}@db:5432/${POSTGRES_DB:-sais}}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      TZ: ${TZ:-America/Fortaleza}
    command: ["alembic", "upgrade", "head"]

  worker:
    build:
      context: .
      dockerfile: ops/docker/worker.Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg2://${POSTGRES_USER:-sais}:${POSTGRES_PASSWORD:-sais}@db:5432/${POSTGRES_DB:-sais}}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      TZ: ${TZ:-America/Fortaleza}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  web:
    build:
      context: .
      dockerfile: ops/docker/web.Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      TZ: ${TZ:-America/Fortaleza}
    depends_on:
      api:
        condition: service_started
    ports:
      - "3000:3000"

  nginx:
    image: nginx:1.25-alpine
    depends_on:
      api:
        condition: service_started
      web:
        condition: service_started
    ports:
      - "8080:80"
    volumes:
      - ./ops/docker/nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  db_data:
  redis_data:
